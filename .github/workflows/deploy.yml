name: Deploy FlaskApp to AWS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  STACK_NAME: flaskapp-stack
  ECR_REPOSITORY_NAME: ${{ secrets.ECR_REPOSITORY }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build and Push Docker Image
        run: |
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }} 

      - name: Deploy CloudFormation Stack
        run: |
          aws cloudformation deploy \
            --template-file cloudformation.yml \
            --stack-name $STACK_NAME \
            --capabilities CAPABILITY_NAMED_IAM
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

      - name: Update ECS Service
        run: |
          aws ecs update-service \
            --cluster flaskapp-cluster \
            --service FlaskAppService \
            --force-new-deployment

      - name: Verify Deployment
        run: |
          echo "Stack status:"
          aws cloudformation describe-stacks --stack-name flask-app-stack --query "Stacks[0].StackStatus" --output text